@using IdentityServer.Admin.Helpers
@model IdentityServer.Admin.Models.Client.ClientModel
<!--Hidden -->
<input type="hidden" asp-for="Id" />

<div class="card mt-3">
    <h5 class="card-header">@T("Clients.Basics").Text</h5>
    <div class="card-body">
        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="Enabled" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.Enabled").Text, T("Clients.Enabled.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="Enabled" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Input - text -->
        <div class="form-group row">
            <label asp-for="Description" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.Description").Text, ""))
            </label>
            <div class="col-sm-9">
                <input type="text" class="form-control" asp-for="Description">
            </div>
        </div>

        <!--Select-->
        <div class="form-group row">
            <label asp-for="ProtocolType" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.ProtocolType").Text, ""))
            </label>
            <div class="col-sm-9">
                @*<select asp-for="ProtocolType" asp-items="@(new SelectList(Model.ProtocolTypes,"Id","Text"))" class="form-control single-select"></select>*@
                <input type="text" readonly="readonly" class="form-control" asp-for="ProtocolType">
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="RequireClientSecret" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.RequireClientSecret").Text, T("Clients.RequireClientSecret.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="RequireClientSecret" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="RequirePkce" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.RequirePkce").Text, T("Clients.RequirePkce.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="RequirePkce" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="AllowPlainTextPkce" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AllowPlainTextPkce").Text, T("Clients.AllowPlainTextPkce.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="AllowPlainTextPkce" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="AllowOfflineAccess" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AllowOfflineAccess").Text, T("Clients.AllowOfflineAccess.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="AllowOfflineAccess" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="AllowAccessTokensViaBrowser" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AllowAccessTokensViaBrowser").Text, T("Clients.AllowAccessTokensViaBrowser.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="AllowAccessTokensViaBrowser" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Select with tags-->
        <div class="form-group row">
            <label asp-for="AllowedScopesItems" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AllowedScopes").Text, T("Clients.AllowedScopes.Hint").Text))
            </label>
            <div class="col-sm-9">
                <picker id="AllowedScopesItems" multiple-select="true" min-search-text="2"
                        url="@Url.Action("SearchScopes","Client")?scope"
                        selected-items="@Model.AllowedScopes.Select(x=>x.Scope).ToList()"
                        search-input-placeholder="@T("Common.PickerSearchItemPlaceholder").Text"
                        selected-items-title="@T("Common.PickerSelectedItemsTitle").Text"
                        search-result-title="@T("Common.PickerSearchResultTitle").Text"
                        suggested-items-title="@T("Common.PickerSuggestedItemsTitle").Text"
                        no-item-selected-title="@T("Common.PickerNoItemSelectedTitle").Text"
                        show-all-items-title="@T("Common.PickerShowAllItemsTitle").Text"
                        item-already-selected-title="@T("Common.PickerItemAlreadySelectedTitle").Text">
                </picker>
            </div>
        </div>


        <!--Select with tags-->
        <div class="form-group row">
            <label asp-for="RedirectUrisItems" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.RedirectUris").Text, T("Clients.RedirectUris.Hint").Text))
            </label>
            <div class="col-sm-9">
                <picker id="RedirectUrisItems" multiple-select="true" min-search-text="2"
                        selected-items="@Model.RedirectUris.Select(x=>x.RedirectUri).ToList()"
                        search-input-placeholder="@T("Common.PickerSearchItemPlaceholder").Text"
                        selected-items-title="@T("Common.PickerSelectedItemsTitle").Text"
                        search-result-title="@T("Common.PickerSearchResultTitle").Text"
                        suggested-items-title="@T("Common.PickerSuggestedItemsTitle").Text"
                        no-item-selected-title="@T("Common.PickerNoItemSelectedTitle").Text"
                        show-all-items-title="@T("Common.PickerShowAllItemsTitle").Text"
                        item-already-selected-title="@T("Common.PickerItemAlreadySelectedTitle").Text">
                </picker>
            </div>
        </div>

        <!--Select with tags-->
        <div class="form-group row">
            <label asp-for="AllowedGrantTypesItems" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AllowedGrantTypes").Text, T("Clients.AllowedGrantTypes.Hint").Text))
            </label>
            <div class="col-sm-9">
                <picker id="AllowedGrantTypesItems" multiple-select="true" min-search-text="2"
                        url="@Url.Action("SearchGrantTypes","Client")?grant"
                        selected-items="@Model.AllowedGrantTypes.Select(x=>x.GrantType).ToList()"
                        search-input-placeholder="@T("Common.PickerSearchItemPlaceholder").Text"
                        selected-items-title="@T("Common.PickerSelectedItemsTitle").Text"
                        search-result-title="@T("Common.PickerSearchResultTitle").Text"
                        suggested-items-title="@T("Common.PickerSuggestedItemsTitle").Text"
                        no-item-selected-title="@T("Common.PickerNoItemSelectedTitle").Text"
                        show-all-items-title="@T("Common.PickerShowAllItemsTitle").Text"
                        item-already-selected-title="@T("Common.PickerItemAlreadySelectedTitle").Text">
                </picker>
            </div>
        </div>

        <!--Button-->
        <div class="form-group row">
            <label asp-for="ClientSecrets" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.ClientSecrets").Text, T("Clients.ClientSecrets.Hint").Text))
            </label>
            <div class="col-sm-9">
                <a asp-action="Index" asp-controller="ClientSecret" asp-route-id="@Model.Id" target="_blank" class="btn btn-primary">@T("Clients.ClientSecrets").Text</a>
            </div>
        </div>


        <!--Button-->
        <div class="form-group row">
            <label asp-for="Properties" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.Properties").Text, T("Clients.Properties.Hint").Text))
            </label>
            <div class="col-sm-9">
                <a asp-action="Index" asp-controller="ClientProperty" asp-route-id="@Model.Id" target="_blank" class="btn btn-primary">@T("Clients.Properties").Text</a>
            </div>
        </div>
    </div>
</div>





