@using IdentityServer.Admin.Core.Entities.Enums
@using IdentityServer.Admin.Core.Extensions
@using IdentityServer.Admin.Helpers
@model IdentityServer.Admin.Models.Client.ClientModel
@{
    var accessTokenType = EnumExtension.ToDictionary<AccessTokenType>().Select(x => new SelectListItem
    {
        Text = x.Value,
        Value = x.Key.ToString()
    });
}

<div class="card mt-3">
    <h5 class="card-header">@T("Clients.NavToken").Text</h5>
    <div class="card-body">
        <!--Input - number -->
        <div class="form-group row">
            <label asp-for="IdentityTokenLifetime" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.IdentityTokenLifetime").Text, T("Clients.IdentityTokenLifetime.Hint").Text))
            </label>
            <div class="col-sm-9">
                <input type="number" class="form-control" asp-for="IdentityTokenLifetime">
            </div>
        </div>

        <!--Input - number -->
        <div class="form-group row">
            <label asp-for="AccessTokenLifetime" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AccessTokenLifetime").Text, T("Clients.AccessTokenLifetime.Hint").Text))
            </label>
            <div class="col-sm-9">
                <input type="number" class="form-control" asp-for="AccessTokenLifetime">
            </div>
        </div>

        <!--Select-->
        <div class="form-group row">
            <label asp-for="AccessTokenType" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AccessTokenType").Text, T("Clients.AccessTokenType.Hint").Text))
            </label>
            <div class="col-sm-9">
                <select asp-for="AccessTokenType" asp-items="@accessTokenType" class="form-control"></select>
            </div>
        </div>

        <!--Input - number -->
        <div class="form-group row">
            <label asp-for="AuthorizationCodeLifetime" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AuthorizationCodeLifetime").Text, T("Clients.AuthorizationCodeLifetime.Hint").Text))
            </label>
            <div class="col-sm-9">
                <input type="number" class="form-control" asp-for="AuthorizationCodeLifetime">
            </div>
        </div>

        <!--Input - number-->
        <div class="form-group row">
            <label asp-for="AbsoluteRefreshTokenLifetime" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AbsoluteRefreshTokenLifetime").Text, T("Clients.AbsoluteRefreshTokenLifetime.Hint").Text))
            </label>
            <div class="col-sm-9">
                <input type="number" class="form-control" asp-for="AbsoluteRefreshTokenLifetime">
            </div>
        </div>

        <!--Input - number -->
        <div class="form-group row">
            <label asp-for="SlidingRefreshTokenLifetime" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.SlidingRefreshTokenLifetime").Text, T("Clients.SlidingRefreshTokenLifetime.Hint").Text))
            </label>
            <div class="col-sm-9">
                <input type="number" class="form-control" asp-for="SlidingRefreshTokenLifetime">
            </div>
        </div>

        <!--Select-->
        <div class="form-group row">
            <label asp-for="RefreshTokenUsage" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.RefreshTokenUsage").Text, T("Clients.RefreshTokenUsage.Hint").Text))
            </label>
            <div class="col-sm-9">
                @*<select asp-for="RefreshTokenUsage" asp-items="@(new SelectList(Model.RefreshTokenUsages,"Id","Text"))" class="form-control single-select"></select>*@
            </div>
        </div>

        <!--Select-->
        <div class="form-group row">
            <label asp-for="RefreshTokenExpiration" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.RefreshTokenExpiration").Text, T("Clients.RefreshTokenExpiration.Hint").Text))
            </label>
            <div class="col-sm-9">
                @*<select asp-for="RefreshTokenExpiration" asp-items="@(new SelectList(Model.RefreshTokenExpirations,"Id","Text"))" class="form-control single-select"></select>*@
            </div>
        </div>

        <!--Select with tags-->
        <div class="form-group row">
            <label asp-for="AllowedCorsOriginsItems" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AllowedCorsOrigins").Text, T("Clients.AllowedCorsOrigins.Hint").Text))
            </label>
            <div class="col-sm-9">
                <picker id="AllowedCorsOriginsItems" multiple-select="true" min-search-text="2"
                        selected-items="@Model.AllowedCorsOrigins.Select(x=>x.Origin).ToList()"
                        search-input-placeholder="@T("Common.PickerSearchItemPlaceholder").Text"
                        selected-items-title="@T("Common.PickerSelectedItemsTitle").Text"
                        search-result-title="@T("Common.PickerSearchResultTitle").Text"
                        suggested-items-title="@T("Common.PickerSuggestedItemsTitle").Text"
                        no-item-selected-title="@T("Common.PickerNoItemSelectedTitle").Text"
                        show-all-items-title="@T("Common.PickerShowAllItemsTitle").Text"
                        item-already-selected-title="@T("Common.PickerItemAlreadySelectedTitle").Text">
                </picker>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="UpdateAccessTokenClaimsOnRefresh" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.UpdateAccessTokenClaimsOnRefresh").Text, T("Clients.UpdateAccessTokenClaimsOnRefresh.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="UpdateAccessTokenClaimsOnRefresh" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="IncludeJwtId" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.IncludeJwtId").Text, T("Clients.IncludeJwtId.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="IncludeJwtId" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="AlwaysSendClientClaims" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AlwaysSendClientClaims").Text, T("Clients.AlwaysSendClientClaims.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="AlwaysSendClientClaims" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Checkbox-->
        <div class="form-group row">
            <label asp-for="AlwaysIncludeUserClaimsInIdToken" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.AlwaysIncludeUserClaimsInIdToken").Text, T("Clients.AlwaysIncludeUserClaimsInIdToken.Hint").Text))
            </label>
            <div class="col-sm-9">
                <toggle-button>
                    <input asp-for="AlwaysIncludeUserClaimsInIdToken" type="checkbox">
                </toggle-button>
            </div>
        </div>

        <!--Input - text -->
        <div class="form-group row">
            <label asp-for="ClientClaimsPrefix" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.ClientClaimsPrefix").Text, T("Clients.ClientClaimsPrefix.Hint").Text))
            </label>
            <div class="col-sm-9">
                <input type="text" class="form-control" asp-for="ClientClaimsPrefix">
            </div>
        </div>

        <!--Input - text -->
        <div class="form-group row">
            <label asp-for="PairWiseSubjectSalt" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.PairWiseSubjectSalt").Text, T("Clients.PairWiseSubjectSalt.Hint").Text))
            </label>
            <div class="col-sm-9">
                <input type="text" class="form-control" asp-for="PairWiseSubjectSalt">
            </div>
        </div>

        <!--Button-->
        <div class="form-group row">
            <label asp-for="Claims" class="col-sm-3 col-form-label">
                @await Html.PartialAsync("Common/Label", HtmlFormatHelper.FormatLabel(T("Clients.Claims").Text, T("Clients.Claims.Hint").Text))
            </label>
            <div class="col-sm-9">
                <a asp-action="Index" asp-controller="ClientClaim" asp-route-id="@Model.Id" target="_blank" class="btn btn-primary">@T("Clients.ManageClaims").Text</a>
            </div>
        </div>
    </div>
</div>